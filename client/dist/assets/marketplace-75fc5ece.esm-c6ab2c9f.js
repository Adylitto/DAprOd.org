import{Q as w,R as n,V as f,ad as m,Y as y,a3 as A,a4 as W,ae as L,af as C,a1 as v,a5 as S,a6 as B,A as h,ag as g,ah as o,aa as p,ai as T,i as l,aj as k,ak as b,al as E}from"./thirdweb-checkout-2c8d478b.esm-fd2cca9d.js";import{B as d}from"./ethers-d38fee93.js";class u{get chainId(){return this._chainId}constructor(e,t,a){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,c=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new w(e,t,s,r);n(this,"abi",void 0),n(this,"contractWrapper",void 0),n(this,"storage",void 0),n(this,"encoder",void 0),n(this,"events",void 0),n(this,"estimator",void 0),n(this,"platformFees",void 0),n(this,"metadata",void 0),n(this,"roles",void 0),n(this,"interceptor",void 0),n(this,"direct",void 0),n(this,"auction",void 0),n(this,"_chainId",void 0),n(this,"getAll",this.getAllListings),this._chainId=c,this.abi=s,this.contractWrapper=i,this.storage=a,this.metadata=new f(this.contractWrapper,m,this.storage),this.roles=new y(this.contractWrapper,u.contractRoles),this.encoder=new A(this.contractWrapper),this.estimator=new W(this.contractWrapper),this.direct=new L(this.contractWrapper,this.storage),this.auction=new C(this.contractWrapper,this.storage),this.events=new v(this.contractWrapper),this.platformFees=new S(this.contractWrapper),this.interceptor=new B(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async getListing(e){const t=await this.contractWrapper.readContract.listings(e);if(t.assetContract===h)throw new g(this.getAddress(),e.toString());switch(t.listingType){case o.Auction:return await this.auction.mapListing(t);case o.Direct:return await this.direct.mapListing(t);default:throw new Error(`Unknown listing type: ${t.listingType}`)}}async getActiveListings(e){const t=await this.getAllListingsNoFilter(!0),a=this.applyFilter(t,e),r=d.from(Math.floor(Date.now()/1e3));return a.filter(s=>s.type===o.Auction&&d.from(s.endTimeInEpochSeconds).gt(r)&&d.from(s.startTimeInEpochSeconds).lte(r)||s.type===o.Direct&&s.quantity>0)}async getAllListings(e){const t=await this.getAllListingsNoFilter(!1);return this.applyFilter(t,e)}async getTotalCount(){return await this.contractWrapper.readContract.totalListings()}async isRestrictedToListerRoleOnly(){return!await this.contractWrapper.readContract.hasRole(p("lister"),h)}async getBidBufferBps(){return this.contractWrapper.readContract.bidBufferBps()}async getTimeBufferInSeconds(){return this.contractWrapper.readContract.timeBuffer()}async getOffers(e){const t=await this.events.getEvents("NewOffer",{order:"desc",filters:{listingId:e}});return await Promise.all(t.map(async a=>await T(this.contractWrapper.getProvider(),d.from(e),{quantityWanted:a.data.quantityWanted,pricePerToken:a.data.quantityWanted.gt(0)?a.data.totalOfferAmount.div(a.data.quantityWanted):a.data.totalOfferAmount,currency:a.data.currency,offeror:a.data.offeror})))}async buyoutListing(e,t,a){const r=await this.contractWrapper.readContract.listings(e);if(r.listingId.toString()!==e.toString())throw new g(this.getAddress(),e.toString());switch(r.listingType){case o.Direct:return l(t!==void 0,"quantityDesired is required when buying out a direct listing"),await this.direct.buyoutListing(e,t,a);case o.Auction:return await this.auction.buyoutListing(e);default:throw Error(`Unknown listing type: ${r.listingType}`)}}async makeOffer(e,t,a){const r=await this.contractWrapper.readContract.listings(e);if(r.listingId.toString()!==e.toString())throw new g(this.getAddress(),e.toString());const s=await this.contractWrapper.getChainID();switch(r.listingType){case o.Direct:return l(a,"quantity is required when making an offer on a direct listing"),await this.direct.makeOffer(e,a,k(r.currency)?b[s].wrapped.address:r.currency,t);case o.Auction:return await this.auction.makeBid(e,t);default:throw Error(`Unknown listing type: ${r.listingType}`)}}async setBidBufferBps(e){await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const t=await this.getTimeBufferInSeconds();await this.contractWrapper.sendTransaction("setAuctionBuffers",[t,d.from(e)])}async setTimeBufferInSeconds(e){await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const t=await this.getBidBufferBps();await this.contractWrapper.sendTransaction("setAuctionBuffers",[d.from(e),t])}async allowListingFromSpecificAssetOnly(e){const t=[];(await this.roles.get("asset")).includes(h)&&t.push(this.encoder.encode("revokeRole",[p("asset"),h])),t.push(this.encoder.encode("grantRole",[p("asset"),e])),await this.contractWrapper.multiCall(t)}async allowListingFromAnyAsset(){const e=[],t=await this.roles.get("asset");for(const a in t)e.push(this.encoder.encode("revokeRole",[p("asset"),a]));e.push(this.encoder.encode("grantRole",[p("asset"),h])),await this.contractWrapper.multiCall(e)}async getAllListingsNoFilter(e){return(await Promise.all(Array.from(Array((await this.contractWrapper.readContract.totalListings()).toNumber()).keys()).map(async a=>{let r;try{r=await this.getListing(a)}catch(s){if(s instanceof g)return;console.warn(`Failed to get listing ${a}' - skipping. Try 'marketplace.getListing(${a})' to get the underlying error.`);return}if(r.type===o.Auction)return r;if(e){const{valid:s}=await this.direct.isStillValidListing(r);if(!s)return}return r}))).filter(a=>a!==void 0)}applyFilter(e,t){let a=[...e];const r=d.from((t==null?void 0:t.start)||0).toNumber(),s=d.from((t==null?void 0:t.count)||E).toNumber();return t&&(t.seller&&(a=a.filter(c=>{var i;return c.sellerAddress.toString().toLowerCase()===((i=t==null?void 0:t.seller)==null?void 0:i.toString().toLowerCase())})),t.tokenContract&&(a=a.filter(c=>{var i;return c.assetContractAddress.toString().toLowerCase()===((i=t==null?void 0:t.tokenContract)==null?void 0:i.toString().toLowerCase())})),t.tokenId!==void 0&&(a=a.filter(c=>{var i;return c.tokenId.toString()===((i=t==null?void 0:t.tokenId)==null?void 0:i.toString())})),a=a.filter((c,i)=>i>=r),a=a.slice(0,s)),a}async call(e){for(var t=arguments.length,a=new Array(t>1?t-1:0),r=1;r<t;r++)a[r-1]=arguments[r];return this.contractWrapper.call(e,...a)}}n(u,"contractRoles",["admin","lister","asset"]);export{u as Marketplace};
