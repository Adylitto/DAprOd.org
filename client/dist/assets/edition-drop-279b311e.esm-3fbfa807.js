import{P as h,Q as d,R as r,V as p,X as l,Y as u,Z as m,$ as g,a0 as C,a1 as w,a2 as v,a3 as y,a4 as W,a5 as f,a6 as E,a7 as R,a8 as A,a9 as T,aa as P,A as b}from"./thirdweb-checkout-2c8d478b.esm-fd2cca9d.js";import"./ethers-d38fee93.js";class n extends h{constructor(t,e,s){let a=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new d(t,e,i,a);super(c,s,o),r(this,"abi",void 0),r(this,"sales",void 0),r(this,"platformFees",void 0),r(this,"encoder",void 0),r(this,"estimator",void 0),r(this,"events",void 0),r(this,"metadata",void 0),r(this,"roles",void 0),r(this,"royalties",void 0),r(this,"claimConditions",void 0),r(this,"checkout",void 0),r(this,"history",void 0),r(this,"interceptor",void 0),r(this,"erc1155",void 0),r(this,"owner",void 0),this.abi=i,this.metadata=new p(this.contractWrapper,l,this.storage),this.roles=new u(this.contractWrapper,n.contractRoles),this.royalties=new m(this.contractWrapper,this.metadata),this.sales=new g(this.contractWrapper),this.claimConditions=new C(this.contractWrapper,this.metadata,this.storage),this.events=new w(this.contractWrapper),this.history=new v(this.events),this.encoder=new y(this.contractWrapper),this.estimator=new W(this.contractWrapper),this.platformFees=new f(this.contractWrapper),this.interceptor=new E(this.contractWrapper),this.erc1155=new R(this.contractWrapper,this.storage,o),this.checkout=new A(this.contractWrapper),this.owner=new T(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async getAll(t){return this.erc1155.getAll(t)}async getOwned(t){return this.erc1155.getOwned(t)}async getTotalCount(){return this.erc1155.totalCount()}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole(P("transfer"),b)}async createBatch(t,e){return this.erc1155.lazyMint(t,e)}async getClaimTransaction(t,e,s){let a=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;return this.erc1155.getClaimTransaction(t,e,s,{checkERC20Allowance:a})}async claimTo(t,e,s){let a=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;return this.erc1155.claimTo(t,e,s,{checkERC20Allowance:a})}async claim(t,e){let s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;const a=await this.contractWrapper.getSignerAddress();return this.claimTo(a,t,e,s)}async burnTokens(t,e){return this.erc1155.burn(t,e)}async call(t){for(var e=arguments.length,s=new Array(e>1?e-1:0),a=1;a<e;a++)s[a-1]=arguments[a];return this.contractWrapper.call(t,...s)}}r(n,"contractRoles",["admin","minter","transfer"]);export{n as EditionDrop};
